{
	"folder_history":
	[
		"/Users/drussel/AltSchool/vishnu-backend",
		"/Users/drussel/AltSchool/config-files",
		"/Users/drussel/AltSchool/go/src/github.com/drussel/gounion",
		"/Users/drussel/AltSchool/khan-learning-updates",
		"/Users/drussel/AltSchool/apollo-backend",
		"/Users/drussel/AltSchool/cheap-seats-research",
		"/Users/drussel/AltSchool/ivona",
		"/Users/drussel/AltSchool/pythontools",
		"/Users/drussel/AltSchool/go/src/github.com/AltSchool",
		"/Users/drussel/AltSchool/go/src/github.com/AltSchool/alcexport",
		"/Users/drussel/AltSchool/go/src/github.com/AltSchool/service-proxy"
	],
	"last_version": 3083,
	"last_window_id": 269,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 916.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"GetAss",
						"GetAssessmentsForStudentByType	[]apollo2.Assessment, error ƒ"
					],
					[
						"R",
						"ReportPanicsAndExit	 ƒ"
					],
					[
						"Clas",
						"ClassroomId	int ʈ"
					],
					[
						"New",
						"NewCaching	v vishnu2.API, err error ƒ"
					],
					[
						"Ge",
						"GetURL	ret string ƒ"
					],
					[
						"P",
						"ProgressChange	struct ʈ"
					],
					[
						"Progress",
						"ProgressChange	struct ʈ"
					],
					[
						"Get",
						"GetExerciseToStandardIdMap	ret khan.ExerciseToStandardIdMap, err error ƒ"
					],
					[
						"Assessment",
						"AssessmentBase	struct ʈ"
					],
					[
						"Add",
						"AddRetryLimitHandler	 ƒ"
					],
					[
						"S",
						"StandardId	taxonomy.StandardId ν"
					],
					[
						"Asse",
						"AssessmentType	string ʈ"
					],
					[
						"St",
						"StudentId	vishnu2.StudentId ν"
					],
					[
						"Acti",
						"ActivityRecord	struct ʈ"
					],
					[
						"Pr",
						"ProgressCollection	 Ɩ"
					],
					[
						"Dele",
						"DeleteAssessment	error ƒ"
					],
					[
						"GetStu",
						"GetStudentsFromClassroom	ret []vishnu2.Student, err error ƒ"
					],
					[
						"class",
						"classroomId	ClassroomId ν"
					],
					[
						"GetAll",
						"GetAllStudents	[]Student, error ƒ"
					],
					[
						"Exer",
						"ExerciseToTaxonomyIdMap	map[ExerciseId][]taxonomy.StandardId ʈ"
					],
					[
						"Ceh",
						"CheckItem	struct ʈ"
					],
					[
						"GetCar",
						"GetCardIdFromURL	trello2.CardId, error ƒ"
					],
					[
						"GetCl",
						"GetClassroomsMap	ret vishnu2.ClassroomsMap, err error ƒ"
					],
					[
						"Class",
						"ClassroomsMap	map[vishnu2.ClassroomId]vishnu2.Classroom ʈ"
					],
					[
						"Ex",
						"Exposure	struct ʈ"
					],
					[
						"GetRe",
						"GetReportSubsectionMarkdown	string ƒ"
					],
					[
						"GetDa",
						"GetDateRangeQuery	bson.M ƒ"
					],
					[
						"N",
						"ActivityName	string ν"
					],
					[
						"Week",
						"WeeklyTargetMinutes	float64 ν"
					],
					[
						"T",
						"Today	time.Duration ν"
					],
					[
						"G",
						"GetDateRange	start time.Time, end time.Time ƒ"
					],
					[
						"GetBoard",
						"GetCardIdsFromBoard	[]trello2.CardId, error ƒ"
					],
					[
						"testing",
						"testingListId	trello2.ListId ν"
					],
					[
						"testCard",
						"testCardStudentId2	vishnu2.StudentId ν"
					],
					[
						"testStu",
						"testCardStudentId2	vishnu2.StudentId ν"
					],
					[
						"or",
						"originalCard	apollo2.Card ν"
					],
					[
						"origi",
						"GetOrganizationIds	ret []trello2.OrganizationId ƒ"
					],
					[
						"Create",
						"CreateCard	Card, error ƒ"
					],
					[
						"I",
						"IdBoard	*trello2.BoardId ν"
					],
					[
						"brd",
						"bridgenewsela	 package ρ"
					],
					[
						"bridge",
						"bridgenewsela	 package ρ"
					],
					[
						"brid",
						"bridgenewsela	 package ρ"
					],
					[
						"A",
						"Assignment	struct ʈ"
					],
					[
						"Par",
						"ParseFloat	f float64, err error ƒ"
					],
					[
						"Read",
						"ReadAll	records [][]string, err error ƒ"
					],
					[
						"Er",
						"ErrNotFound	error ν"
					],
					[
						"E",
						"Exercise	khan.ExerciseId ν"
					],
					[
						"Progr",
						"ProgressChange	struct ʈ"
					],
					[
						"GetS",
						"GetStandardsMarkdown	ret string ƒ"
					],
					[
						"time",
						"timeFieldName	string ν"
					],
					[
						"Dail",
						"DailyRecord	struct ʈ"
					],
					[
						"start",
						"StartDate	*string ν"
					],
					[
						"En",
						"EnqueueOneOffTask	 ƒ"
					],
					[
						"student",
						"studentIdFlag	*string ν"
					],
					[
						"GetA",
						"GetCardsFromList	[]trello2.Card, error ƒ"
					],
					[
						"Ensu",
						"EnsureList	ret trello2.List, err error ƒ"
					],
					[
						"GetStude",
						"GetStudentsMap	ret vishnu2.StudentsMap, err error ƒ"
					],
					[
						"k",
						"bridgekhan	 package ρ"
					],
					[
						"progressCha",
						"progressChangeTask	 Ɩ"
					],
					[
						"Pro",
						"ProgressChange	struct ʈ"
					],
					[
						"khan",
						"bridgekhan	 package ρ"
					],
					[
						"KhanS",
						"KhanStrugglingCollection	 Ɩ"
					],
					[
						"KhanPro",
						"KhanProgressCollection	 Ɩ"
					],
					[
						"Cass",
						"ClassroomId	int ʈ"
					],
					[
						"Load",
						"LoadFromApollo	graph taxonomy.Graph, err error ƒ"
					],
					[
						"test",
						"testStudentEmail	vishnu2.EmailAddress ν"
					],
					[
						"GetAl",
						"GetAllExposure	[]Exposure, error ƒ"
					],
					[
						"acces",
						"accessToken	*oauth.Credentials ν"
					],
					[
						"Guar",
						"GuardianId	string ʈ"
					],
					[
						"F",
						"FirstName	string ν"
					],
					[
						"Up",
						"UpdateCard	trello2.CardId, error ƒ"
					],
					[
						"for",
						"forkedFromURLTitle	 Ɩ"
					],
					[
						"GetCh",
						"GetCheckItem	CheckItem, error ƒ"
					],
					[
						"Update",
						"UpdateCheckItemState	error ƒ"
					],
					[
						"Id",
						"IdCard	CardId ν"
					],
					[
						"check",
						"checkListId	 Ɩ"
					],
					[
						"Upda",
						"UpdateCheckItem	error ƒ"
					],
					[
						"Err",
						"ErrorIfNotNil	 ƒ"
					],
					[
						"re",
						"recurCardsAction	err error ƒ"
					],
					[
						"ver",
						"copyDocVerb	 Ɩ"
					],
					[
						"Che",
						"CheckItemId	string ʈ"
					],
					[
						"Comment",
						"CommentReply	struct ʈ"
					],
					[
						"comments",
						"commentsFileId	 Ɩ"
					],
					[
						"Tri",
						"TrimSpace	string ƒ"
					],
					[
						"overr",
						"overrideClassroomEnvVariable	 Ɩ"
					],
					[
						"GetCard",
						"GetCardIdsFromBoard	[]trello2.CardId, error ƒ"
					],
					[
						"GetStudent",
						"GetStudentIdFromBoardId	ret vishnu2.StudentId ƒ"
					],
					[
						"Stude",
						"GetStudentIdFromBoardId	ret vishnu2.StudentId ƒ"
					],
					[
						"Car",
						"CardSource	*trello2.ActionDataCard ν"
					],
					[
						"get",
						"getPasswordEnvVariable	altviper.EnvVariable ƒ"
					],
					[
						"pass",
						"passwordEnvVarname	 Ɩ"
					],
					[
						"user",
						"usernameEnvVarname	 Ɩ"
					],
					[
						"proc",
						"processedMutex	sync.Mutex ν"
					],
					[
						"Card",
						"CardFetcher	interface ¡"
					],
					[
						"Co",
						"CopyGoogleDocsAction	err error ƒ"
					],
					[
						"Att",
						"AttachmentId	string ʈ"
					],
					[
						"Comm",
						"CommonCoreELAId	 Ɩ"
					],
					[
						"Set",
						"SetGrades	 ƒ"
					],
					[
						"Docume",
						"DocumentId	string ʈ"
					],
					[
						"GetSt",
						"GetStandardTag	ret apollo2.DocumentId ƒ"
					],
					[
						"Stand",
						"StandardIdMetadataField	 Ɩ"
					],
					[
						"Sta",
						"StandardSetTagSpaceId	 Ɩ"
					],
					[
						"Doc",
						"DocumentId	string ʈ"
					],
					[
						"Alt",
						"AltSchoolTestOrganizationId	 Ɩ"
					],
					[
						"GetL",
						"GetListsFromBoard	[]trello2.List, error ƒ"
					],
					[
						"GetBo",
						"GetBoard	trello2.Board, error ƒ"
					],
					[
						"en",
						"enrollmentDates	*string ν"
					],
					[
						"skip",
						"skipTeachers	*bool ν"
					],
					[
						"ski",
						"skipStudents	*bool ν"
					],
					[
						"enr",
						"enrollmentMap	map[vishnu2.StudentId]enrollment ν"
					],
					[
						"em",
						"shareEmail	*string ν"
					],
					[
						"ass",
						"CommentAssessment	struct ʈ"
					],
					[
						"comme",
						"commentsFileId	 Ɩ"
					],
					[
						"la",
						"lastActivityTitle	 Ɩ"
					],
					[
						"guar",
						"guardianData	[][]string ν"
					],
					[
						"Student",
						"StudentsMap	map[vishnu2.StudentId]vishnu2.Student ʈ"
					],
					[
						"car",
						"cardFileCollection	 Ɩ"
					],
					[
						"GetCla",
						"GetClassroomTeacherMap	ret vishnu2.ClassroomTeacherMap, err error ƒ"
					],
					[
						"Sh",
						"ShareFolder	drive.Id, error ƒ"
					],
					[
						"Action",
						"ActionDataOld	struct ʈ"
					],
					[
						"List",
						"ListAfter	trello2.ActionDataList ν"
					],
					[
						"Da",
						"Date	time.Time ν"
					],
					[
						"Enq",
						"EnqueueTasks	 ƒ"
					],
					[
						"GetBoa",
						"GetBoardIdsFromOrganization	[]trello2.BoardId, error ƒ"
					],
					[
						"Org",
						"OrganizationId	string ʈ"
					],
					[
						"User",
						"UsersMap	map[vishnu2.UserId]vishnu2.User ʈ"
					],
					[
						"doFill",
						"doFillCardsFromIds	 ƒ"
					],
					[
						"card",
						"cardActions	[]cardAction ν"
					]
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 392.0,
				"last_filter": "package",
				"selected_items":
				[
					[
						"package",
						"Package Control: Install Package"
					],
					[
						"packcontr",
						"Package Control: Install Package"
					],
					[
						"pac",
						"Package Control: Remove Package"
					],
					[
						"pack",
						"Package Control: Remove Repository"
					],
					[
						"packa",
						"Package Control: Remove Package"
					],
					[
						"source",
						"Sourcegraph: Search From Selection"
					],
					[
						"go",
						"GoSublime: Fmt and save"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"css",
						"Set Syntax: SCSS"
					],
					[
						"p",
						"Package Control: Install Package"
					],
					[
						"sass",
						"Set Syntax: Sass"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"packag",
						"Package Control: Install Package"
					],
					[
						"package contro",
						"Package Control: Install Package"
					]
				],
				"width": 593.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import subprocess; subprocess.check_output(\"src version\", shell=True)",
					"import subprocess; subprocess.check_output(\"srcer\", shell=True)",
					"import subprocess; subprocess.check_output(\"src\", shell=True)",
					"import subprocess; subprocess.check_output(\"dsfasfa\", shell=True)",
					"import subprocess; subprocess.check_output(\"echo 1\", shell=True)",
					"import subprocess; subprocess.check_output(\"src\", shell=True)",
					"import subprocess; subprocess.check_output(\"src --help\", shell=True)",
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/drussel/AltSchool/config-files/lp.yaml",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/card.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/config.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/helper.go.orig",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/autopilot-export-mongo/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/autopilot-export-csv/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/assessments.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/autopilot-export-apollo/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-student-statistics/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-to-assessment/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/actions.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/student-board-monitor/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/images.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/khan.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/records.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/khan/records.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/assessments_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/khan/khan.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/utility/utility.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/vishnu2/utility.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/khan/bridge-khan-progress-report/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/map/bridge-map-standards-data/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/map/records.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/queue/queue.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/queue/tasks.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/student-doc-assessor/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/student-board-processor/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/drive_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/lists.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/errors.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/assessments.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/trello-rename-cards/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/update.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/bridge-cards-http/pull.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/helper.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/constants.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/cards.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/newsela/records.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/map/bridge-map-data/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/bridge-cards-http/fill.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/update_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/export_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/export.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/update.go.orig",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/khan/bridge-khan-import/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/newsela/bridge-newsela-progress-report/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-statistics/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/khan/api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/bridge-lexia-download/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/bridge-lexia-parse/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/autopilot.py",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state/analytics-state-postgres-keys/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/trello-move-cards/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/run.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/flags.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/bridge-report-find-cards/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/bridge-lexia-progress-report/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/text.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/circle.yml",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/helpers.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/afternoonly.sh",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy/taxonomy.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/newsela/new.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy/taxonomy.json",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy/taxonomy-show/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy/taxonomy-update/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/newsela/bridge-newsela-import/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/heroku/heroku-config-set/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/khan/new.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/cards_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/cleanup.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/cards.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/cards_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/config.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/trello-apollo-initialize/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/trello-apollo-cleanup/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/cleanup_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/newsela/newsela_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/newsela/api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/vishnu2/new.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/new.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapi/api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapi/altschool_api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/new.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/activities_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/althttp/utility.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/.buildpacks",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/nightly.sh",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/queue/in_memory_queue.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy/graph.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/card_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/mongo/helpers.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/map.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-cleanup/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/lexia_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/lexia.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/bridge-lexia-export/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/lexia.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/progress_report.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/records.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-import/main.go",
				"/Users/drussel/src/dotfiles/Library/Application Support/Sublime Text 3/Packages/GoSublime/USAGE.md",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/boards.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/trello-add-to-boards/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/trello-apollo-pipe/trello.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/althttp/errors.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-exercise-data/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/khan/login_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/garyburd/go-oauth/oauth/oauth.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-exposure.py",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-progress.py",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-struggling.py",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-progress-report/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/package.json",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/casperjs_khan.js",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/pythontools/khan/_test_oauth_client.py",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/khan/smugmug_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/phantomjs_khan.js",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/pythontools/khan/_splinter_khan.py",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/gobridge/khan.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/vishnu2/guardians.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/vishnu2/api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state/analytics-state-postgres-keys/create-tables.sql",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/bridge-cards-export/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/pythontools/khan/__init__.py",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state/analytics-state-drive-alc-summary/main.go"
			],
			"find":
			{
				"height": 29.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/bridge-cards",
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe/*",
					"-AltSchool/*/Godeps/*,AltSchool/gotools/*",
					"-AltSchool/*/Godeps/*,AltSchool/taxonomy/*",
					"-AltSchool/*/Godeps/*,*.go",
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/bridge/*",
					"-AltSchool/*/Godeps/*,AltSchool/gotools/*",
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe,AltSchool/gotools",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe",
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/gotools/queue/*",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe/*",
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe/*",
					"-AltSchool/*/Godeps/*,AltSchool/autopilot/*",
					"-AltSchool/*/Godeps/*",
					"",
					"AltSchool/analytics-state/Godeps",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/autopilot/*.go",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/bridge",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/analytics-state",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/apollo-trello-pipe",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/apollo-trello-pipe",
					"-*/Godeps/*,AltSchool/gotools/trello2",
					"-*/Godeps/*,AltSchool/gotools/vishnu2",
					"-*/Godeps/*,AltSchool/gotools/vishnu2i",
					"-*/Godeps/*,AltSchool/gotools/vishnu2",
					"-*/Godeps/*,AltSchool/gotools/apollo2",
					"-*/Godeps/*,AltSchool/analytics-state",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/apollo-trello-pipe",
					"-*/Godeps/*,apollo-trello-pipe",
					"-*/Godeps/*",
					"-*/Godeps/*,*/analytics-state/*.go",
					"-*/Godeps/*,*/analytics-state/*/*.go",
					"-*/Godeps/*",
					"",
					"-*/Godeps/*",
					"",
					"AltSchool/analytics-state",
					"analytics-state",
					"",
					"AltSchool/analytics-state",
					"analytics-state",
					"",
					"analytics-state",
					"-Godeps,analytics-state",
					"-Godeps",
					"-*/Godeps",
					"-Godeps",
					" -Godeps",
					" -public lib",
					" -public",
					"/Users/drussel/AltSchool/vishnu-frontend, -public",
					"/Users/drussel/AltSchool/vishnu-frontend",
					"/Users/drussel/AltSchool/vishnu-frontend/app/models",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"bridge.Khan",
					"github.com/AltSchool/bridge/gobridge",
					"AddRetryLimitHandler",
					"ExerciseToTaxonomyIdMap",
					"complete",
					"GetCardIdFromURL",
					".One",
					"Nothing done for",
					"GetDateRangeQuery",
					"fmt.Print",
					"7980",
					"es",
					"`json:\"([^\"]*)\"`",
					"\"not found\"",
					"Parse",
					"7fe1d945-a7cc-4678-690f-bb645e5c30d2",
					"bridge.Khan",
					"bridge.MAP",
					"bridge.Lexia",
					"Select",
					"Sort",
					"//	",
					"fmt.Prin",
					"readcre",
					"readredentials",
					"\"port\"",
					"apollo",
					"AddForkedFromToIds",
					"CheckForMissingFields",
					"required",
					"fmt.Print",
					"GetAssessmentsForCard",
					"- 1",
					"assessm",
					"github.com/google/google-api-go-client",
					"github.com/AltSchool/google-api-go-client",
					"AddRea",
					"name",
					"defer",
					"write_page",
					"Common Core ELA",
					"Next Generation Science",
					"subjectArea",
					"Missing SubjectArea for",
					"CommonCoreId",
					"aapi",
					"still items in queue",
					"AddRegisterTrelloWebhookHander",
					"LexiaProgressReport",
					"progress",
					"saveprogr",
					"tapi.",
					"createcard",
					"tryStart",
					"alreadyUp",
					"Card already being updated",
					"fmt.Printl",
					"14f95239-fa0a-4f02-7b08-14e7f118f715",
					"strconv",
					"code.google.com/p/google-api-go-client",
					"google.golang.org/api/googleapi",
					"drive.",
					"gotools/drive",
					"/drive",
					" drive.",
					" altdrive.",
					" drive.",
					"Grade",
					"fmt.P",
					"CCRA",
					"\"ro\"",
					"taxonomy",
					"fmt.Printf",
					"fmt.Println",
					"queue_rate",
					"initializeOrg",
					"pipe_en",
					"length",
					"queued",
					"Classroom",
					"filter",
					"f676c12c-2bb6-4ff6-bb8c-1b4171a2d841",
					"066724c6-2e16-4ce1-b828-1db4309afb2b",
					"fmt.Print",
					"\"Language\"",
					"Language\"",
					"^5",
					"LS1",
					"bad normalization",
					"write_page",
					"\"cas\"",
					"go ",
					"updating list",
					"broadcast",
					"subQueue",
					"addToCou",
					"sub",
					"phantomjs",
					"trello2.",
					"uuid",
					"Highs",
					"patchActivityTaskKey",
					"\"dropped\"",
					"dropped",
					"WriteHea",
					"viper.GetString",
					"viper.Get",
					"WeeklyTime",
					"idKey",
					"handler",
					"uuid",
					"tcard.Id",
					"log.P",
					"fmt.Print",
					"cardId",
					"pipetools",
					"alos",
					"Learning Objectives\"",
					"unknown",
					"grade",
					"Can't find standard",
					"Can't find st",
					"Updating",
					"summarized to",
					"fmt.",
					"fmt",
					" on delete",
					" no action"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"khan.",
					"github.com/AltSchool/bridge",
					"ExerciseToStandardIdMap",
					"`json:\"\\1\" bson:\"\\1\"`",
					"bridgekhan.",
					"nwea.",
					"lexia.",
					"google.golang.org/api",
					"github.com/google/google-api-go-client",
					"CommonCoreELAId",
					"gotools/altdrive",
					" altdrive.",
					"Println",
					"User",
					"^\"5",
					"_write_page",
					"inMemoryStatistics",
					"",
					"altviper.GetString",
					"tcardId",
					"id",
					"pipe",
					"",
					"CompetencyRecord",
					"",
					"varchar",
					"Guardians",
					"new Date",
					"\"),",
					"",
					"\"",
					"taxonomy.StandardId",
					"",
					"autopilot.",
					"package autopilot",
					"github.com/AltSchool/autopilot",
					"mongo.GetDatabase(s, \"bridge\")",
					"altrollbar.PanicIfNotNil",
					"althttp.Error",
					"althttp.MatchesError",
					"altrollbar",
					"altrollbar.PanicIfNotNil",
					"_",
					",",
					"",
					"this.DoRequest(",
					" this.",
					"this *impl",
					"",
					"this.DoRequest(",
					"this *impl",
					" this.",
					"this *impl",
					"",
					"path :=",
					"i.DoRequest(",
					"altrollbar.Error",
					"altrollbar.Message",
					"",
					"Panic",
					"analytics.Panic",
					"int not null",
					"apollo2.DocumentType",
					"apollo2.DocumentId",
					"q queue",
					"queue.Queue",
					"\",\"",
					"Id",
					"json:\"\\1\" bson:\"\\1\"",
					"StandardIdTo",
					" GetIsTrelloId",
					".GetIsTrelloId",
					"",
					"SubjectArea",
					"string",
					"=",
					"",
					"SubjectArea",
					"L.2.1",
					"",
					"analytics.TimeField:date",
					"}))",
					"bson.M{",
					"analytics.StudentIdField:",
					"analytics.TypeField:",
					"analytics.TimeField:",
					"doc +=",
					"Teacher",
					"teacher",
					"Review",
					"PLPGoal",
					"NewSimpleCountQuery",
					"CountKey",
					"PLP",
					"ALO",
					"PLP",
					"vishnu2.",
					"apollo2.",
					"CardId",
					"ities",
					"Activity",
					"activity",
					"ities",
					"Activity",
					"activity",
					"Classroom",
					"Activity",
					"List",
					"Attachment",
					"CheckItem",
					"Checklist",
					"Today",
					"",
					"Understand ",
					"  ",
					"b5d50df3-f72e-4789-a8f4-73929c037e8b",
					"Subjective Evaluation",
					"Social Relationships",
					"Bridging Differences",
					"Self-Management",
					"Goal Setting",
					"Self-Awareness",
					"Emotional Awareness",
					"Physical Awareness",
					"Influence",
					"Collaboration",
					"Peer Relationships",
					"Impulse Control"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 29.0
			},
			"input":
			{
				"height": 31.0
			},
			"menu_visible": true,
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo":
			{
				"height": 160.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-add-tree":
			{
				"height": 165.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-cat":
			{
				"height": 217.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-create":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-id":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-ls":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-rm":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/lib":
			{
				"height": 247.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/pipe":
			{
				"height": 258.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/pipe-initialize":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/pipelib":
			{
				"height": 200.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/tracking":
			{
				"height": 272.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/tracking-export":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/tracking-import":
			{
				"height": 256.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/utility":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/alcexport":
			{
				"height": 118.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state":
			{
				"height": 118.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state/analytics-alc-state":
			{
				"height": 118.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state/analytics-state-cleanup":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state/analytics-state-dump":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/pipetools":
			{
				"height": 292.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/trello-apollo-pipe":
			{
				"height": 118.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/go-lib/model":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/gobridge":
			{
				"height": 308.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report":
			{
				"height": 372.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapi":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altdrive":
			{
				"height": 349.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2":
			{
				"height": 302.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/drive":
			{
				"height": 476.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/khan":
			{
				"height": 436.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/newsela":
			{
				"height": 416.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/queue":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/utility":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/student-board-monitor":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/src/dotfiles/Library/Application Support/Sublime Text 3/Packages/GoSublime":
			{
				"height": 136.0
			},
			"output.GoSublime-main-output":
			{
				"height": 118.0
			},
			"output.GsDoc-output-output":
			{
				"height": 136.0
			},
			"output.MarGo-output":
			{
				"height": 100.0
			},
			"output.autopep8":
			{
				"height": 100.0
			},
			"output.exec":
			{
				"height": 155.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 54.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"export",
						"bridge-cards/export_test.go"
					],
					[
						"cardedhb",
						"app/templates/card/edit.hbs"
					],
					[
						"apphb",
						"app/templates/application.hbs"
					],
					[
						"playscs",
						"app/styles/_playlist.scss"
					],
					[
						"",
						"app/templates/card/edit.hbs"
					],
					[
						"cardedithb",
						"app/templates/card/edit.hbs"
					],
					[
						"cardedi",
						"app/controllers/card_edit_controller.js"
					],
					[
						"tagscon",
						"app/controllers/tags_controller.js"
					],
					[
						"api_url",
						"node_modules/karma/node_modules/optimist/node_modules/minimist/.travis.yml"
					],
					[
						"card",
						"app/models/playlist/card.js"
					],
					[
						"routplay",
						"app/routes/playlist_route.js"
					],
					[
						"modcar",
						"app/models/playlist/card.js"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 380.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 336.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1239.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"GetTa",
						"GetTaxonomyNamesMap	taxonomy.NameToTaxonomyIdMap ƒ"
					],
					[
						"Add",
						"AddErrorFunction	 ƒ"
					],
					[
						"clea",
						"cleanupOnly	*bool ν"
					],
					[
						"GetT",
						"GetTaxonomyNamesMap	taxonomy.NameToTaxonomyIdMap ƒ"
					],
					[
						"GetAss",
						"GetAssessmentsForStudentByType	[]apollo2.Assessment, error ƒ"
					],
					[
						"R",
						"ReportPanicsAndExit	 ƒ"
					],
					[
						"Clas",
						"ClassroomId	int ʈ"
					],
					[
						"New",
						"NewCaching	v vishnu2.API, err error ƒ"
					],
					[
						"Ge",
						"GetURL	ret string ƒ"
					],
					[
						"P",
						"ProgressChange	struct ʈ"
					],
					[
						"Progress",
						"ProgressChange	struct ʈ"
					],
					[
						"Get",
						"GetExerciseToStandardIdMap	ret khan.ExerciseToStandardIdMap, err error ƒ"
					],
					[
						"Assessment",
						"AssessmentBase	struct ʈ"
					],
					[
						"S",
						"StandardId	taxonomy.StandardId ν"
					],
					[
						"Asse",
						"AssessmentType	string ʈ"
					],
					[
						"St",
						"StudentId	vishnu2.StudentId ν"
					],
					[
						"Acti",
						"ActivityRecord	struct ʈ"
					],
					[
						"Pr",
						"ProgressCollection	 Ɩ"
					],
					[
						"Dele",
						"DeleteAssessment	error ƒ"
					],
					[
						"GetStu",
						"GetStudentsFromClassroom	ret []vishnu2.Student, err error ƒ"
					],
					[
						"class",
						"classroomId	ClassroomId ν"
					],
					[
						"GetAll",
						"GetAllStudents	[]Student, error ƒ"
					],
					[
						"Exer",
						"ExerciseToTaxonomyIdMap	map[ExerciseId][]taxonomy.StandardId ʈ"
					],
					[
						"Ceh",
						"CheckItem	struct ʈ"
					],
					[
						"GetCar",
						"GetCardIdFromURL	trello2.CardId, error ƒ"
					],
					[
						"GetCl",
						"GetClassroomsMap	ret vishnu2.ClassroomsMap, err error ƒ"
					],
					[
						"Class",
						"ClassroomsMap	map[vishnu2.ClassroomId]vishnu2.Classroom ʈ"
					],
					[
						"Ex",
						"Exposure	struct ʈ"
					],
					[
						"GetRe",
						"GetReportSubsectionMarkdown	string ƒ"
					],
					[
						"GetDa",
						"GetDateRangeQuery	bson.M ƒ"
					],
					[
						"N",
						"ActivityName	string ν"
					],
					[
						"Week",
						"WeeklyTargetMinutes	float64 ν"
					],
					[
						"T",
						"Today	time.Duration ν"
					],
					[
						"G",
						"GetDateRange	start time.Time, end time.Time ƒ"
					],
					[
						"GetBoard",
						"GetCardIdsFromBoard	[]trello2.CardId, error ƒ"
					],
					[
						"testing",
						"testingListId	trello2.ListId ν"
					],
					[
						"testCard",
						"testCardStudentId2	vishnu2.StudentId ν"
					],
					[
						"testStu",
						"testCardStudentId2	vishnu2.StudentId ν"
					],
					[
						"or",
						"originalCard	apollo2.Card ν"
					],
					[
						"origi",
						"GetOrganizationIds	ret []trello2.OrganizationId ƒ"
					],
					[
						"Create",
						"CreateCard	Card, error ƒ"
					],
					[
						"I",
						"IdBoard	*trello2.BoardId ν"
					],
					[
						"brd",
						"bridgenewsela	 package ρ"
					],
					[
						"bridge",
						"bridgenewsela	 package ρ"
					],
					[
						"brid",
						"bridgenewsela	 package ρ"
					],
					[
						"A",
						"Assignment	struct ʈ"
					],
					[
						"Par",
						"ParseFloat	f float64, err error ƒ"
					],
					[
						"Read",
						"ReadAll	records [][]string, err error ƒ"
					],
					[
						"Er",
						"ErrNotFound	error ν"
					],
					[
						"E",
						"Exercise	khan.ExerciseId ν"
					],
					[
						"Progr",
						"ProgressChange	struct ʈ"
					],
					[
						"GetS",
						"GetStandardsMarkdown	ret string ƒ"
					],
					[
						"time",
						"timeFieldName	string ν"
					],
					[
						"Dail",
						"DailyRecord	struct ʈ"
					],
					[
						"start",
						"StartDate	*string ν"
					],
					[
						"En",
						"EnqueueOneOffTask	 ƒ"
					],
					[
						"student",
						"studentIdFlag	*string ν"
					],
					[
						"GetA",
						"GetCardsFromList	[]trello2.Card, error ƒ"
					],
					[
						"Ensu",
						"EnsureList	ret trello2.List, err error ƒ"
					],
					[
						"GetStude",
						"GetStudentsMap	ret vishnu2.StudentsMap, err error ƒ"
					],
					[
						"k",
						"bridgekhan	 package ρ"
					],
					[
						"progressCha",
						"progressChangeTask	 Ɩ"
					],
					[
						"Pro",
						"ProgressChange	struct ʈ"
					],
					[
						"khan",
						"bridgekhan	 package ρ"
					],
					[
						"KhanS",
						"KhanStrugglingCollection	 Ɩ"
					],
					[
						"KhanPro",
						"KhanProgressCollection	 Ɩ"
					],
					[
						"Cass",
						"ClassroomId	int ʈ"
					],
					[
						"Load",
						"LoadFromApollo	graph taxonomy.Graph, err error ƒ"
					],
					[
						"test",
						"testStudentEmail	vishnu2.EmailAddress ν"
					],
					[
						"GetAl",
						"GetAllExposure	[]Exposure, error ƒ"
					],
					[
						"acces",
						"accessToken	*oauth.Credentials ν"
					],
					[
						"Guar",
						"GuardianId	string ʈ"
					],
					[
						"F",
						"FirstName	string ν"
					],
					[
						"Up",
						"UpdateCard	trello2.CardId, error ƒ"
					],
					[
						"for",
						"forkedFromURLTitle	 Ɩ"
					],
					[
						"GetCh",
						"GetCheckItem	CheckItem, error ƒ"
					],
					[
						"Update",
						"UpdateCheckItemState	error ƒ"
					],
					[
						"Id",
						"IdCard	CardId ν"
					],
					[
						"check",
						"checkListId	 Ɩ"
					],
					[
						"Upda",
						"UpdateCheckItem	error ƒ"
					],
					[
						"Err",
						"ErrorIfNotNil	 ƒ"
					],
					[
						"re",
						"recurCardsAction	err error ƒ"
					],
					[
						"ver",
						"copyDocVerb	 Ɩ"
					],
					[
						"Che",
						"CheckItemId	string ʈ"
					],
					[
						"Comment",
						"CommentReply	struct ʈ"
					],
					[
						"comments",
						"commentsFileId	 Ɩ"
					],
					[
						"Tri",
						"TrimSpace	string ƒ"
					],
					[
						"overr",
						"overrideClassroomEnvVariable	 Ɩ"
					],
					[
						"GetCard",
						"GetCardIdsFromBoard	[]trello2.CardId, error ƒ"
					],
					[
						"GetStudent",
						"GetStudentIdFromBoardId	ret vishnu2.StudentId ƒ"
					],
					[
						"Stude",
						"GetStudentIdFromBoardId	ret vishnu2.StudentId ƒ"
					],
					[
						"Car",
						"CardSource	*trello2.ActionDataCard ν"
					],
					[
						"get",
						"getPasswordEnvVariable	altviper.EnvVariable ƒ"
					],
					[
						"pass",
						"passwordEnvVarname	 Ɩ"
					],
					[
						"user",
						"usernameEnvVarname	 Ɩ"
					],
					[
						"proc",
						"processedMutex	sync.Mutex ν"
					],
					[
						"Card",
						"CardFetcher	interface ¡"
					],
					[
						"Co",
						"CopyGoogleDocsAction	err error ƒ"
					],
					[
						"Att",
						"AttachmentId	string ʈ"
					],
					[
						"Comm",
						"CommonCoreELAId	 Ɩ"
					],
					[
						"Set",
						"SetGrades	 ƒ"
					],
					[
						"Docume",
						"DocumentId	string ʈ"
					],
					[
						"GetSt",
						"GetStandardTag	ret apollo2.DocumentId ƒ"
					],
					[
						"Stand",
						"StandardIdMetadataField	 Ɩ"
					],
					[
						"Sta",
						"StandardSetTagSpaceId	 Ɩ"
					],
					[
						"Doc",
						"DocumentId	string ʈ"
					],
					[
						"Alt",
						"AltSchoolTestOrganizationId	 Ɩ"
					],
					[
						"GetL",
						"GetListsFromBoard	[]trello2.List, error ƒ"
					],
					[
						"GetBo",
						"GetBoard	trello2.Board, error ƒ"
					],
					[
						"en",
						"enrollmentDates	*string ν"
					],
					[
						"skip",
						"skipTeachers	*bool ν"
					],
					[
						"ski",
						"skipStudents	*bool ν"
					],
					[
						"enr",
						"enrollmentMap	map[vishnu2.StudentId]enrollment ν"
					],
					[
						"em",
						"shareEmail	*string ν"
					],
					[
						"ass",
						"CommentAssessment	struct ʈ"
					],
					[
						"comme",
						"commentsFileId	 Ɩ"
					],
					[
						"la",
						"lastActivityTitle	 Ɩ"
					],
					[
						"guar",
						"guardianData	[][]string ν"
					],
					[
						"Student",
						"StudentsMap	map[vishnu2.StudentId]vishnu2.Student ʈ"
					],
					[
						"car",
						"cardFileCollection	 Ɩ"
					],
					[
						"GetCla",
						"GetClassroomTeacherMap	ret vishnu2.ClassroomTeacherMap, err error ƒ"
					],
					[
						"Sh",
						"ShareFolder	drive.Id, error ƒ"
					],
					[
						"Action",
						"ActionDataOld	struct ʈ"
					],
					[
						"List",
						"ListAfter	trello2.ActionDataList ν"
					],
					[
						"Da",
						"Date	time.Time ν"
					],
					[
						"Enq",
						"EnqueueTasks	 ƒ"
					],
					[
						"GetBoa",
						"GetBoardIdsFromOrganization	[]trello2.BoardId, error ƒ"
					],
					[
						"Org",
						"OrganizationId	string ʈ"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Users/drussel/src/dotfiles/Library/Application Support/Sublime Text 3/Packages/GoSublime/USAGE.md",
					"settings":
					{
						"buffer_size": 8539,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "Packages/GoSublime/GoSublime.sublime-build",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 392.0,
				"last_filter": "package",
				"selected_items":
				[
					[
						"package",
						"Package Control: Install Package"
					],
					[
						"packcontr",
						"Package Control: Install Package"
					],
					[
						"pac",
						"Package Control: Remove Package"
					],
					[
						"pack",
						"Package Control: Remove Repository"
					],
					[
						"packa",
						"Package Control: Remove Package"
					],
					[
						"source",
						"Sourcegraph: Search From Selection"
					],
					[
						"go",
						"GoSublime: Fmt and save"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"css",
						"Set Syntax: SCSS"
					],
					[
						"p",
						"Package Control: Install Package"
					],
					[
						"sass",
						"Set Syntax: Sass"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"packag",
						"Package Control: Install Package"
					],
					[
						"package contro",
						"Package Control: Install Package"
					]
				],
				"width": 593.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import subprocess; subprocess.check_output(\"src version\", shell=True)",
					"import subprocess; subprocess.check_output(\"srcer\", shell=True)",
					"import subprocess; subprocess.check_output(\"src\", shell=True)",
					"import subprocess; subprocess.check_output(\"dsfasfa\", shell=True)",
					"import subprocess; subprocess.check_output(\"echo 1\", shell=True)",
					"import subprocess; subprocess.check_output(\"src\", shell=True)",
					"import subprocess; subprocess.check_output(\"src --help\", shell=True)",
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-to-assessment",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/bridge-lexia-progress-report",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/map",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapi",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/khan",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/mongo",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/newsela",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/trello-add-to-boards",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/trello-rename-cards",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/utility",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/vishnu2"
			],
			"file_history":
			[
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/newsela/bridge-newsela-progress-report/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/khan/bridge-khan-progress-report/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/bridge-lexia-progress-report/main.go",
				"/Users/drussel/src/dotfiles/Library/Application Support/Sublime Text 3/Packages/GoSublime/USAGE.md",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/khan/bridge-khan-import/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/newsela/new.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/run.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/grade.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/mongo/helpers.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/model.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/compentencies.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-to-assessment/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/khan/records.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/map/records.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/map.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/cards.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/autopilot-export-apollo/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/autopilot-export-csv/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/autopilot-export-mongo/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/trello-move-cards/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/records.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/utility/utility.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/map/bridge-map-data/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/khan/khan.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/text.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/bridge-report-find-cards/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/autopilot-http/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapp/sync.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapp/taxonomy.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapp/students/src.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapp/queue.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapp/mongo.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapp/setup.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapp/apis.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/assessments.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/khan.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/lexia.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/assessments.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/card.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/config.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/helper.go.orig",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-student-statistics/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/actions.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/student-board-monitor/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/images.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/assessments_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/vishnu2/utility.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/map/bridge-map-standards-data/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/queue/queue.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/queue/tasks.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/student-doc-assessor/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/student-board-processor/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/drive_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/lists.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/errors.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/trello-rename-cards/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/update.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/bridge-cards-http/pull.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/helper.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/constants.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/newsela/records.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/bridge-cards-http/fill.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/update_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/export_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/export.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards/update.go.orig",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-statistics/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/khan/api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/bridge-lexia-download/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/bridge-lexia-parse/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/autopilot.py",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state/analytics-state-postgres-keys/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/flags.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/circle.yml",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/helpers.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/afternoonly.sh",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy/taxonomy.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy/taxonomy.json",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy/taxonomy-show/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy/taxonomy-update/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/newsela/bridge-newsela-import/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/heroku/heroku-config-set/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/khan/new.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/cards_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/cleanup.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/cards.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/cards_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/config.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/trello-apollo-initialize/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/trello-apollo-cleanup/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/cleanup_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/newsela/newsela_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/newsela/api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/vishnu2/new.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/new.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapi/api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapi/altschool_api.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/new.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2/activities_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/althttp/utility.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/.buildpacks",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/nightly.sh",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/queue/in_memory_queue.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy/graph.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report/card_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-cleanup/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/lexia_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/lexia.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/lexia/bridge-lexia-export/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/progress_report.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/records.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-import/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/boards.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2/trello-add-to-boards/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/trello-apollo-pipe/trello.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/althttp/errors.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-exercise-data/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/khan/login_test.go",
				"/Users/drussel/AltSchool/go/src/github.com/garyburd/go-oauth/oauth/oauth.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-exposure.py",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-progress.py",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-struggling.py",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/bridge-khan-progress-report/main.go",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/package.json",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/casperjs_khan.js",
				"/Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/pythontools/khan/_test_oauth_client.py"
			],
			"find":
			{
				"height": 37.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/bridge-cards",
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe/*",
					"-AltSchool/*/Godeps/*,AltSchool/gotools/*",
					"-AltSchool/*/Godeps/*,AltSchool/taxonomy/*",
					"-AltSchool/*/Godeps/*,*.go",
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/bridge/*",
					"-AltSchool/*/Godeps/*,AltSchool/gotools/*",
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe,AltSchool/gotools",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe",
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/gotools/queue/*",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe/*",
					"-AltSchool/*/Godeps/*",
					"-AltSchool/*/Godeps/*,AltSchool/apollo-trello-pipe/*",
					"-AltSchool/*/Godeps/*,AltSchool/autopilot/*",
					"-AltSchool/*/Godeps/*",
					"",
					"AltSchool/analytics-state/Godeps",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/autopilot/*.go",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/bridge",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/analytics-state",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/apollo-trello-pipe",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/apollo-trello-pipe",
					"-*/Godeps/*,AltSchool/gotools/trello2",
					"-*/Godeps/*,AltSchool/gotools/vishnu2",
					"-*/Godeps/*,AltSchool/gotools/vishnu2i",
					"-*/Godeps/*,AltSchool/gotools/vishnu2",
					"-*/Godeps/*,AltSchool/gotools/apollo2",
					"-*/Godeps/*,AltSchool/analytics-state",
					"-*/Godeps/*",
					"-*/Godeps/*,AltSchool/apollo-trello-pipe",
					"-*/Godeps/*,apollo-trello-pipe",
					"-*/Godeps/*",
					"-*/Godeps/*,*/analytics-state/*.go",
					"-*/Godeps/*,*/analytics-state/*/*.go",
					"-*/Godeps/*",
					"",
					"-*/Godeps/*",
					"",
					"AltSchool/analytics-state",
					"analytics-state",
					"",
					"AltSchool/analytics-state",
					"analytics-state",
					"",
					"analytics-state",
					"-Godeps,analytics-state",
					"-Godeps",
					"-*/Godeps",
					"-Godeps",
					" -Godeps",
					" -public lib",
					" -public",
					"/Users/drussel/AltSchool/vishnu-frontend, -public",
					"/Users/drussel/AltSchool/vishnu-frontend",
					"/Users/drussel/AltSchool/vishnu-frontend/app/models",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"fmt.Print",
					"dividers",
					"Updating",
					"gotools/utility\"",
					"bridge.Khan",
					"github.com/AltSchool/bridge/gobridge",
					"AddRetryLimitHandler",
					"ExerciseToTaxonomyIdMap",
					"complete",
					"GetCardIdFromURL",
					".One",
					"Nothing done for",
					"GetDateRangeQuery",
					"fmt.Print",
					"7980",
					"es",
					"`json:\"([^\"]*)\"`",
					"\"not found\"",
					"Parse",
					"7fe1d945-a7cc-4678-690f-bb645e5c30d2",
					"bridge.Khan",
					"bridge.MAP",
					"bridge.Lexia",
					"Select",
					"Sort",
					"//	",
					"fmt.Prin",
					"readcre",
					"readredentials",
					"\"port\"",
					"apollo",
					"AddForkedFromToIds",
					"CheckForMissingFields",
					"required",
					"fmt.Print",
					"GetAssessmentsForCard",
					"- 1",
					"assessm",
					"github.com/google/google-api-go-client",
					"github.com/AltSchool/google-api-go-client",
					"AddRea",
					"name",
					"defer",
					"write_page",
					"Common Core ELA",
					"Next Generation Science",
					"subjectArea",
					"Missing SubjectArea for",
					"CommonCoreId",
					"aapi",
					"still items in queue",
					"AddRegisterTrelloWebhookHander",
					"LexiaProgressReport",
					"progress",
					"saveprogr",
					"tapi.",
					"createcard",
					"tryStart",
					"alreadyUp",
					"Card already being updated",
					"fmt.Printl",
					"14f95239-fa0a-4f02-7b08-14e7f118f715",
					"strconv",
					"code.google.com/p/google-api-go-client",
					"google.golang.org/api/googleapi",
					"drive.",
					"gotools/drive",
					"/drive",
					" drive.",
					" altdrive.",
					" drive.",
					"Grade",
					"fmt.P",
					"CCRA",
					"\"ro\"",
					"taxonomy",
					"fmt.Printf",
					"fmt.Println",
					"queue_rate",
					"initializeOrg",
					"pipe_en",
					"length",
					"queued",
					"Classroom",
					"filter",
					"f676c12c-2bb6-4ff6-bb8c-1b4171a2d841",
					"066724c6-2e16-4ce1-b828-1db4309afb2b",
					"fmt.Print",
					"\"Language\"",
					"Language\"",
					"^5",
					"LS1",
					"bad normalization",
					"write_page",
					"\"cas\"",
					"go ",
					"updating list",
					"broadcast",
					"subQueue",
					"addToCou",
					"sub",
					"phantomjs",
					"trello2.",
					"uuid",
					"Highs",
					"patchActivityTaskKey",
					"\"dropped\"",
					"dropped",
					"WriteHea",
					"viper.GetString",
					"viper.Get",
					"WeeklyTime",
					"idKey",
					"handler",
					"uuid",
					"tcard.Id",
					"log.P",
					"fmt.Print",
					"cardId",
					"pipetools",
					"alos",
					"Learning Objectives\"",
					"unknown",
					"grade",
					"Can't find standard",
					"Can't find st",
					"Updating",
					"summarized to"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"khan.",
					"github.com/AltSchool/bridge",
					"ExerciseToStandardIdMap",
					"`json:\"\\1\" bson:\"\\1\"`",
					"bridgekhan.",
					"nwea.",
					"lexia.",
					"google.golang.org/api",
					"github.com/google/google-api-go-client",
					"CommonCoreELAId",
					"gotools/altdrive",
					" altdrive.",
					"Println",
					"User",
					"^\"5",
					"_write_page",
					"inMemoryStatistics",
					"",
					"altviper.GetString",
					"tcardId",
					"id",
					"pipe",
					"",
					"CompetencyRecord",
					"",
					"varchar",
					"Guardians",
					"new Date",
					"\"),",
					"",
					"\"",
					"taxonomy.StandardId",
					"",
					"autopilot.",
					"package autopilot",
					"github.com/AltSchool/autopilot",
					"mongo.GetDatabase(s, \"bridge\")",
					"altrollbar.PanicIfNotNil",
					"althttp.Error",
					"althttp.MatchesError",
					"altrollbar",
					"altrollbar.PanicIfNotNil",
					"_",
					",",
					"",
					"this.DoRequest(",
					" this.",
					"this *impl",
					"",
					"this.DoRequest(",
					"this *impl",
					" this.",
					"this *impl",
					"",
					"path :=",
					"i.DoRequest(",
					"altrollbar.Error",
					"altrollbar.Message",
					"",
					"Panic",
					"analytics.Panic",
					"int not null",
					"apollo2.DocumentType",
					"apollo2.DocumentId",
					"q queue",
					"queue.Queue",
					"\",\"",
					"Id",
					"json:\"\\1\" bson:\"\\1\"",
					"StandardIdTo",
					" GetIsTrelloId",
					".GetIsTrelloId",
					"",
					"SubjectArea",
					"string",
					"=",
					"",
					"SubjectArea",
					"L.2.1",
					"",
					"analytics.TimeField:date",
					"}))",
					"bson.M{",
					"analytics.StudentIdField:",
					"analytics.TypeField:",
					"analytics.TimeField:",
					"doc +=",
					"Teacher",
					"teacher",
					"Review",
					"PLPGoal",
					"NewSimpleCountQuery",
					"CountKey",
					"PLP",
					"ALO",
					"PLP",
					"vishnu2.",
					"apollo2.",
					"CardId",
					"ities",
					"Activity",
					"activity",
					"ities",
					"Activity",
					"activity",
					"Classroom",
					"Activity",
					"List",
					"Attachment",
					"CheckItem",
					"Checklist",
					"Today",
					"",
					"Understand ",
					"  ",
					"b5d50df3-f72e-4789-a8f4-73929c037e8b",
					"Subjective Evaluation",
					"Social Relationships",
					"Bridging Differences",
					"Self-Management",
					"Goal Setting",
					"Self-Awareness",
					"Emotional Awareness",
					"Physical Awareness",
					"Influence",
					"Collaboration",
					"Peer Relationships",
					"Impulse Control"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Users/drussel/src/dotfiles/Library/Application Support/Sublime Text 3/Packages/GoSublime/USAGE.md",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 8539,
								"regions":
								{
								},
								"selection":
								[
									[
										829,
										829
									]
								],
								"settings":
								{
									"BracketHighlighterBusy": false,
									"bh_regions":
									[
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content"
									],
									"syntax": "Packages/MarkdownEditing/Markdown.tmLanguage",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 29.0
			},
			"input":
			{
				"height": 31.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo":
			{
				"height": 160.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-add-tree":
			{
				"height": 165.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-cat":
			{
				"height": 217.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-create":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-id":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-ls":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/apollo-rm":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/lib":
			{
				"height": 247.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/pipe":
			{
				"height": 258.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/pipe-initialize":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/pipelib":
			{
				"height": 200.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/tracking":
			{
				"height": 272.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/tracking-export":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/tracking-import":
			{
				"height": 256.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/apollo-trello-pipe/utility":
			{
				"height": 100.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/alcexport":
			{
				"height": 118.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state":
			{
				"height": 118.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state/analytics-alc-state":
			{
				"height": 118.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state/analytics-state-cleanup":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/analytics-state/analytics-state-dump":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/pipetools":
			{
				"height": 292.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe/trello-apollo-pipe":
			{
				"height": 118.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/autopilot/go-lib/model":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge-cards":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/gobridge":
			{
				"height": 308.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/bridge/report":
			{
				"height": 372.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altapi":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/altdrive":
			{
				"height": 349.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/apollo2":
			{
				"height": 302.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/drive":
			{
				"height": 476.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/khan":
			{
				"height": 436.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/newsela":
			{
				"height": 416.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/queue":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/trello2":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools/utility":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/student-board-monitor/student-board-monitor":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy":
			{
				"height": 136.0
			},
			"output.9o:///Users/drussel/src/dotfiles/Library/Application Support/Sublime Text 3/Packages/GoSublime":
			{
				"height": 136.0
			},
			"output.GoSublime-main-output":
			{
				"height": 118.0
			},
			"output.GsDoc-output-output":
			{
				"height": 136.0
			},
			"output.MarGo-output":
			{
				"height": 100.0
			},
			"output.autopep8":
			{
				"height": 100.0
			},
			"output.exec":
			{
				"height": 155.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 220 46 1239 938 0 0 1680 1027 ",
			"project": "AltSchool.sublime-project",
			"replace":
			{
				"height": 68.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"export",
						"bridge-cards/export_test.go"
					],
					[
						"cardedhb",
						"app/templates/card/edit.hbs"
					],
					[
						"apphb",
						"app/templates/application.hbs"
					],
					[
						"playscs",
						"app/styles/_playlist.scss"
					],
					[
						"",
						"app/templates/card/edit.hbs"
					],
					[
						"cardedithb",
						"app/templates/card/edit.hbs"
					],
					[
						"cardedi",
						"app/controllers/card_edit_controller.js"
					],
					[
						"tagscon",
						"app/controllers/tags_controller.js"
					],
					[
						"api_url",
						"node_modules/karma/node_modules/optimist/node_modules/minimist/.travis.yml"
					],
					[
						"card",
						"app/models/playlist/card.js"
					],
					[
						"routplay",
						"app/routes/playlist_route.js"
					],
					[
						"modcar",
						"app/models/playlist/card.js"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 380.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 336.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 269,
			"workspace_name": "/Users/drussel/AltSchool/go/src/github.com/AltSchool.sublime-workspace"
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/Users/drussel/AltSchool/go/src/github.com/AltSchool.sublime-workspace",
			"/Users/drussel/AltSchool/vishnu-frontend.sublime-workspace",
			"/Users/drussel/AltSchool/go/src/github.com/AltSchool/taxonomy.sublime-workspace",
			"/Users/drussel/AltSchool/go/src/github.com/AltSchool/alcexport.sublime-workspace",
			"/Users/drussel/AltSchool/go/src/github.com/AltSchool/apollo-trello-pipe.sublime-workspace",
			"/Users/drussel/AltSchool/go/src/github.com/AltSchool/gotools.sublime-workspace",
			"/Users/drussel/AltSchool/go/src/github.com/AltSchool/service-proxy.sublime-workspace",
			"/Users/drussel/AltSchool/cheapseats-research.sublime-workspace",
			"/Users/drussel/AltSchool/apollo-backend.sublime-workspace",
			"/Users/drussel/AltSchool/ChromeExtensionTrello.sublime-workspace",
			"/Users/drussel/AltSchool/vishnu-frontend-alo-editor.sublime-workspace",
			"/Users/drussel/AltSchool/vishnu-frontend-tagger.sublime-workspace"
		]
	}
}
